"""Add pictures table

Revision ID: 5c93b6d58ac9
Revises: 
Create Date: 2025-08-06 16:26:18.260983
"""

from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '5c93b6d58ac9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # SQLite対応: pictures テーブルがなければ新規作成（course_id含む）
    op.create_table(
        'pictures',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('course_id', sa.Integer(), nullable=True),
        sa.Column('url', sa.String(length=512), nullable=False),
        sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['course_id'], ['courses.id'])
    )

    # 以下はSQLiteで非対応なため削除、別マイグレーションや手動対応を検討
    # op.alter_column('users', 'name', existing_type=sa.VARCHAR(), nullable=True)
    # op.drop_index(op.f('ix_users_email'), table_name='users')
    # op.drop_index(op.f('ix_users_id'), table_name='users')

def downgrade() -> None:
    """Downgrade schema."""
    op.drop_table('pictures')

    # 再定義しない場合は下記も削除可能
    # op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=1)
    # op.alter_column('users', 'name', existing_type=sa.VARCHAR(), nullable=False)

#################################################################################################

# """Add pictures table

# Revision ID: 5c93b6d58ac9
# Revises: 
# Create Date: 2025-08-06 16:26:18.260983

# """
# from typing import Sequence, Union

# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision: str = '5c93b6d58ac9'
# down_revision: Union[str, Sequence[str], None] = None
# branch_labels: Union[str, Sequence[str], None] = None
# depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     """Upgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.add_column('pictures', sa.Column('course_id', sa.Integer(), nullable=True))
#     op.create_foreign_key(None, 'pictures', 'courses', ['course_id'], ['id'])
#     op.alter_column('users', 'name',
#                existing_type=sa.VARCHAR(),
#                nullable=True)
#     op.drop_index(op.f('ix_users_email'), table_name='users')
#     op.drop_index(op.f('ix_users_id'), table_name='users')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     """Downgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
#     op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=1)
#     op.alter_column('users', 'name',
#                existing_type=sa.VARCHAR(),
#                nullable=False)
#     op.drop_constraint(None, 'pictures', type_='foreignkey')
#     op.drop_column('pictures', 'course_id')
#     # ### end Alembic commands ###
